@model List<maryStudyGroup.Models.StudyGroup>

<h2>INF272 Study Group Members</h2>

<table id="studyGroupTable" class="table table-bordered">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.First().StudentNumber)</th>
            <th>@Html.DisplayNameFor(model => model.First().Name)</th>
            <th>@Html.DisplayNameFor(model => model.First().Surname)</th>
            <th>@Html.DisplayNameFor(model => model.First().EmailAddress)</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var student in Model)
        {
            <tr class="student-row" data-name="@student.Name">
                <td>@student.StudentNumber</td>
                <td>@student.Name</td>
                <td>@student.Surname</td>
                <td>@student.EmailAddress</td>
                <td>
                    <button onclick="removeRow(this)" class="btn btn-danger">Remove</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Search Input -->
<div class="form-group">
    <input type="text" id="searchBox" class="form-control">
    <button onclick="searchAndHighlight()" class="btn btn-info mt-2">Search</button>
</div>

<div class="mb-3">
    <button class="btn btn-info mt-2" onclick="saveTable()">Save Table</button>
    <button class="btn btn-info mt-2" onclick="loadTable()">Load Table</button>
    <button class="btn btn-info mt-2" onclick="clearTable()">Clear Storage</button>
</div>



@section scripts {
    <script>
        // Remove row
        function removeRow(button) {
            const row = button.closest("tr");
            if (row) {
                row.remove();
            }
        }

        //  Highlight rows where first name matches search
        function searchAndHighlight() {
            const input = document.getElementById("searchBox").value.toLowerCase();
            const rows = document.querySelectorAll(".student-row");

            rows.forEach(row => {
                const name = row.dataset.name.toLowerCase();
                if (name.includes(input)) {
                    row.querySelectorAll("td").forEach(cell => {
                        cell.style.color = "red";
                    });

                    // Remove red after 3 seconds
                    setTimeout(() => {
                        row.querySelectorAll("td").forEach(cell => {
                            cell.style.color = "";
                        });
                    }, 3000);
                }
            });
        }

        function saveTable() {
            const tableRows = document.querySelectorAll("#studyGroupTable tbody tr");
            const tableData = [];

            tableRows.forEach(row => {
                const cells = row.querySelectorAll("td");
                if (cells.length >= 4) {
                    tableData.push({
                        studentNumber: cells[0].textContent.trim(),
                        name: cells[1].textContent.trim(),
                        surname: cells[2].textContent.trim(),
                        email: cells[3].textContent.trim()
                    });
                }
            });

            localStorage.setItem("studyGroupTable", JSON.stringify(tableData));
            alert("Table saved to localStorage!");
        }

        function loadTable() {
            const storedData = localStorage.getItem("studyGroupTable");
            if (!storedData) {
                alert("No table data found in localStorage.");
                return;
            }

            const tableData = JSON.parse(storedData);
            const tbody = document.querySelector("#studyGroupTable tbody");
            tbody.innerHTML = "";

            tableData.forEach(item => {
                const row = document.createElement("tr");
                row.classList.add("student-row");
                row.setAttribute("data-name", item.name);
                row.innerHTML = `
                <td>${item.studentNumber}</td>
                <td>${item.name}</td>
                <td>${item.surname}</td>
                <td>${item.email}</td>
                <td><button class="btn btn-danger" onclick="removeRow(this)">Remove</button></td>`;
                tbody.appendChild(row);
            });

            alert("Table loaded from localStorage!");
        }

        function clearTable() {
            localStorage.removeItem("studyGroupTable");
            alert("Table data cleared from localStorage");
        }
    </script>
}
